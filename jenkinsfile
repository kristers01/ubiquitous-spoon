pipeline {
    agent any
    stages {
        stage("User input") {
            steps {
                input("Update cloudformation stack?")
            }
        }
        stage("Upload to S3") {
            steps{
                withCredentials([gitUsernamePassword(credentialsId: 'pushId', gitToolName: 'Default')]) {
                sh '''
                git pull origin main
                '''
                }
                withAWS(region:'eu-west-1',credentials:'kristers') {
                s3Upload(pathStyleAccessEnabled: true, payloadSigningEnabled: true, file:'first-stack.yaml', bucket:'jenkinsgitpush')
                }
            }
        }
        stage("Update cloudformation stack") {
            steps {
                withAWS(region:'eu-west-1',credentials:'kristers') {
                cfnUpdate(stack:'jenkinsstack', url:'https://s3.amazonaws.com/jenkinsgitpush/first-stack.yaml')
                }
            }
        }
    }
    post {
        success {
            echo "Works!"
        }
        aborted {
            withCredentials([gitUsernamePassword(credentialsId: 'pushId', gitToolName: 'Default')]) {
            sh '''
            echo "start of script"
            git config --global user.email "kristers.rukmanis.32@gmail.com"
            git config --global user.name "kristers01"
            echo "set global username and email"
            git checkout main
            echo "checked out main"
            git pull origin main
            echo "pulled main branch from repo"
            git checkout -b reverted-branch
            echo "created temporary branch 'reverted branch'"
            git revert -m 1 HEAD
            echo "reverted head 1 back"
            git checkout main
            echo "checked out main"
            git merge reverted-branch
            echo "merged 'reverted branch' with main branch"
            git push origin main
            echo "pushed to repo"
            git branch -D reverted-branch
            echo "deleted reverted branch"
            '''
            }
        }
    }
}